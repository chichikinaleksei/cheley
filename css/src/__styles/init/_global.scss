/**
 * Base styles that aim to normalize fonts, and display of elements
 * across browsers, and make writing further styles easier.
 */

/* Set font and clear body padding */
html,
button,
input,
select,
textarea {
    font-family: $font-base;
}

body {
    min-width: rem( 320 );

    margin: 0;

    font-family: $font-base;
    color: paint(text-dark);

    background-color: paint(bg-light);

    @include body-1(false);
    -webkit-font-smoothing: antialiased;
    @include media-breakpoint-down(sm) {
        font-size: 1rem;
        line-height: 1.5rem;
    }

    &.lock-scroll {
        overflow: hidden;
    }

    &.overlayed #page {
        position: relative;

        &:before {
            content: '';

            display: block;

            position: absolute;
            z-index: 9;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;

            background: rgba($black, .75);
        }

        .main-header {
            background-color: paint(bg-light);
        }
    }
}

/* Setting sizes is much more predictable with border-box */
* {
    &,
    &:before,
    &:after {
        box-sizing: border-box;
    }
}

figure {
    margin: 0;
}

/* Make all images responsive */
img {
    height: auto;
    max-width: 100%;

    vertical-align: middle;
}

blockquote {
    padding-left: rem( 16 );

    margin: rem( 29 ) 0;

    border-left: 4px solid paint(accent);

    @include quote;
    @include media-breakpoint-up(md) {
        padding-left: rem( 40 );

        margin: rem( 44 ) 0;
    }

    p:not([class]) {
        font-family: $font-baskerville;
        color: paint(neutral-30);

        @include quote;
    }

    > :first-child {
        margin-top: 0;
    }

    > :last-child {
        margin-bottom: 0;
    }
}

// Horizontal rule.
hr.wp-block-separator {
    margin: rem( 55 ) 0;

    border-top: 1px solid paint(neutral-70);
    border-bottom: 0;

    @include media-breakpoint-up(md) {
        margin: rem( 95 ) 0;
    }

    &.is-style-wide {
        width: calc(var(--columnWidth) * 12 - 30px)!important;
        max-width: calc(var(--columnMaxWidth) * 12 - 30px)!important;
    }
}

/* Normalize links across browsers */
a {
    color: paint(accent);
    text-decoration: none;

    transition: all .2s linear;

    img {
        border: 0;
    }
}

.page-content a:not([class]) {
    color: paint(accent);
    text-decoration: underline;

    text-underline-position: under;
    text-decoration-color: paint(accent);

    &:focus,
    &:hover {
        color: paint(accent-variant);

        text-decoration-color: paint(accent-variant);
    }
}

a:focus,
a:hover {
    color: paint(accent-variant);
    text-decoration: none;
}

.tablet-checker {
    display: none;

    @include media-breakpoint-down(md) {
        display: block;
    }
}

.container-fluid {
    @include media-breakpoint-down(sm) {
        padding: 0 rem( 20 );
    }
}

.row {
    @include media-breakpoint-down(sm) {
        margin: 0 rem( -20 );
    }
}

.col-12,
.col-6 {
    @include media-breakpoint-down(sm) {
        padding: 0 rem( 20 );
    }
}

#page {
    position: relative;
}

/* Set custom outline styles */
a,
button,
input,
select,
textarea {
    &:focus {
        outline: none;

        html.user-tab-nav & {
            outline: $outline;
            outline-offset: 0;
        }
    }
}
