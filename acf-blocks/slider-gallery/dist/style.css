/****************
 * Fonts
 ****************/
/****************
 * Paints
 ****************/
/****************
 * Effects
 ****************/
/****************
 * Grid Settings
 ****************/
.slider-gallery {
  margin: 2.9375rem 0;
}
@media (min-width: 48rem) {
  .slider-gallery {
    margin: 5rem 0 4rem;
  }
}

.lightbox-gallery {
  margin-bottom: 5rem;
}
@media (min-width: 48rem) {
  .lightbox-gallery {
    margin-top: 4.625rem;
    margin-bottom: 10rem;
  }
}
.lightbox-gallery__gallery-wrapper {
  padding-top: 5rem;
  position: fixed;
  z-index: 999;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #004965;
  opacity: 1;
  visibility: visible;
  transition: all 300ms ease;
}
.lightbox-gallery__gallery-wrapper:not(.active) {
  opacity: 0;
  visibility: hidden;
}
.lightbox-gallery__close {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0;
  position: absolute;
  z-index: 999;
  top: 1.25rem;
  right: 1.25rem;
  font-size: 1.5rem;
  color: #ffffff;
  border: none;
  border-radius: 50%;
  background-color: rgba(77, 77, 77, 0.35);
  cursor: pointer;
}
.lightbox-gallery__close > [class^=icon] {
  display: inline-flex;
}
.lightbox-gallery__thumbnails-wrapper .row {
  row-gap: 1rem;
}
@media (min-width: 48rem) {
  .lightbox-gallery__thumbnails-wrapper .row {
    row-gap: 2.0625rem;
  }
}
@media (max-width: 47.98rem) {
  .lightbox-gallery__single-thumb:nth-child(2n) {
    padding-left: 0.5rem;
  }
}
@media (max-width: 47.98rem) {
  .lightbox-gallery__single-thumb:nth-child(2n+1) {
    padding-right: 0.5rem;
  }
}
.lightbox-gallery__single-thumb:hover, .lightbox-gallery__single-thumb:focus {
  opacity: 0.8;
}
.lightbox-gallery .gallery-slider {
  max-width: 100%;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translate(0, -50%);
}
.lightbox-gallery .gallery-slider__image img {
  max-height: calc(100vh - 10rem);
  max-height: calc(var(--vh, 1vh) * 100 - 10rem);
}
.lightbox-gallery .gallery-slider--has-captions img {
  max-height: calc(100vh - 12rem);
  max-height: calc(var(--vh, 1vh) * 100 - 12rem);
}
.lightbox-gallery .gallery-slider__caption {
  color: #ffffff;
  opacity: 0;
}
.lightbox-gallery .slick-current .gallery-slider__caption {
  opacity: 1;
}

.gallery-slider__slider {
  padding: 0;
}
.gallery-slider__caption {
  margin-top: 1rem;
  margin-bottom: 0;
  text-align: center;
  opacity: 0;
  transition: opacity 0.2s linear;
  font-size: 0.75rem;
  line-height: 1rem;
  margin-bottom: 0.5rem;
}
.gallery-slider .slick-arrow {
  outline: none;
}
.gallery-slider .slick-current .gallery-slider__caption {
  opacity: 1;
}

.gallery-slider--fluid .gallery-slider__single-slide {
  padding: 0 0.15625rem;
}
@media (min-width: 62rem) {
  .gallery-slider--fluid .gallery-slider__single-slide {
    padding: 0 0.5rem;
  }
}
@media (min-width: 75rem) {
  .gallery-slider--fluid .slick-arrow.slick-next {
    right: calc(50vw - 38.4375rem);
  }
  .gallery-slider--fluid .slick-arrow.slick-prev {
    left: calc(50vw - 38.4375rem);
  }
}

.gallery-slider--has-captions .slick-arrow {
  margin-top: -1.25rem;
}

.block-slider-gallery--hard .gallery-slider__single-slide img {
  width: 100%;
  height: auto;
}
@media (max-width: 47.98rem) {
  .block-slider-gallery--hard .gallery-slider:not(.gallery-slider--fluid) .slick-prev {
    left: 0.9375rem;
  }
}
@media (max-width: 47.98rem) {
  .block-slider-gallery--hard .gallery-slider:not(.gallery-slider--fluid) .slick-next {
    right: 0.9375rem;
  }
}
.block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
  width: auto;
  height: 45.5rem;
}
@media (max-width: 88.105rem) {
  .block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
    height: 34.375rem;
  }
}
@media (max-width: 74.98rem) {
  .block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
    height: 30.625rem;
  }
}
@media (max-width: 61.98rem) {
  .block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
    height: 24.375rem;
  }
}
@media (max-width: 47.98rem) {
  .block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
    height: 18.125rem;
  }
}
@media (max-width: 35.98rem) {
  .block-slider-gallery--hard .gallery-slider--fluid .gallery-slider__single-slide img {
    height: 10rem;
  }
}

@media (min-width: 75rem) {
  .block-slider-gallery--flexible .gallery-slider--fluid .slick-arrow.slick-next {
    right: 1.875rem;
  }
  .block-slider-gallery--flexible .gallery-slider--fluid .slick-arrow.slick-prev {
    left: 1.875rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
