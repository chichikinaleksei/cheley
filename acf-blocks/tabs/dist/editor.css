/****************
 * Fonts
 ****************/
/****************
 * Paints
 ****************/
/****************
 * Effects
 ****************/
/****************
 * Grid Settings
 ****************/
.block-editor-block-list__layout {
  /****************
   * Fonts
   ****************/
  /****************
   * Paints
   ****************/
  /****************
   * Effects
   ****************/
  /****************
   * Grid Settings
   ****************/
}
.block-editor-block-list__layout .block-tabs {
  padding: 3.5625rem 0 3.1875rem;
  position: relative;
  overflow: hidden;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .block-tabs {
    padding: 10.25rem 0 11rem;
  }
}
.block-editor-block-list__layout .block-tabs::before, .block-editor-block-list__layout .block-tabs::after {
  content: "";
  pointer-events: none;
  width: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-repeat: no-repeat;
  background-size: 100% auto;
}
.block-editor-block-list__layout .block-tabs::before {
  background-image: url(../../../images/decorations/tab-brush-top-mobile.svg);
  background-position: center top -0.0625rem;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .block-tabs::before {
    background-image: url(../../../images/decorations/tab-brush-top-desk.svg);
  }
}
.block-editor-block-list__layout .block-tabs::after {
  background-image: url(../../../images/decorations/tab-brush-bottom-mobile.svg);
  background-position: center bottom -0.0625rem;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .block-tabs::after {
    background-image: url(../../../images/decorations/tab-brush-bottom-desk.svg);
  }
}
.block-editor-block-list__layout .tabs__link-list-wrapper {
  margin-top: 1.5rem;
}
.block-editor-block-list__layout .tabs__link-list {
  padding: 0;
  position: relative;
  z-index: 2;
  margin: 0 0 2rem;
  white-space: nowrap;
  overflow-x: auto;
  overflow-y: hidden;
  border-bottom: 0.0625rem solid #e1e1e1;
}
.block-editor-block-list__layout .tabs__link-list:before, .block-editor-block-list__layout .tabs__link-list:after {
  content: "";
  display: table;
}
.block-editor-block-list__layout .tabs__link-list:after {
  clear: both;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .tabs__link-list {
    padding: 0;
    margin: 0 0 4.8125rem;
  }
}
.block-editor-block-list__layout .tabs__link-list-wrapper {
  position: relative;
}
.block-editor-block-list__layout .tabs__link {
  display: inline-block;
  float: none;
  margin: 0 0 0.0625rem;
  font-size: 1.125rem;
  font-weight: 500;
}
.block-editor-block-list__layout .tabs__link a {
  display: block;
  min-width: 6.625rem;
  padding: 0.875rem 0.25rem;
  position: relative;
  text-align: center;
  color: #ffffff;
  text-decoration: none;
  transition: color 0.2s linear;
  font-size: clamp(0.875rem, 0.6442307692rem + 0.641025641vw, 1.125rem);
  font-weight: 500;
  line-height: clamp(1rem, 0.5384615385rem + 1.2820512821vw, 1.5rem);
}
@media (min-width: 36rem) {
  .block-editor-block-list__layout .tabs__link a {
    min-width: 12.5rem;
    padding: 0.625rem 0.375rem;
  }
}
.block-editor-block-list__layout .tabs__link a:after {
  content: "";
  display: block;
  width: 100%;
  height: 0;
  position: absolute;
  right: auto;
  bottom: -0.125rem;
  left: 0;
  background-color: #ffffff;
  transition: all 0.2s linear;
}
.block-editor-block-list__layout .tabs__link.active a::after {
  height: 0.125rem;
}
.block-editor-block-list__layout .tabs__bg {
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
}
.block-editor-block-list__layout .tabs__bg::after {
  content: "";
  position: absolute;
  z-index: 0;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #153e0e;
  opacity: 0.8;
}
.block-editor-block-list__layout .tabs__bg img {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  object-fit: cover;
}
.block-editor-block-list__layout .tabs__side-heading {
  padding: 0 1.25rem;
  z-index: 2;
  color: #ffffff;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .tabs__side-heading {
    padding: 0;
    position: absolute;
    top: 28.625rem;
    left: 0;
    transform: translate(-47.4%, 0) rotate(90deg);
    text-transform: uppercase;
    font-family: "baskerville-urw", serif;
    font-size: clamp(2.125rem, 0.625rem + 4.1666666667vw, 3.75rem);
    font-weight: 700;
    line-height: clamp(2.5rem, 1.1153846154rem + 3.8461538462vw, 4rem);
    margin-bottom: clamp(1rem, 0.0769230769rem + 2.5641025641vw, 2rem);
  }
}
.block-editor-block-list__layout .tabs__tab-content {
  position: static;
  color: #ffffff;
  opacity: 1;
  visibility: visible;
}
.block-editor-block-list__layout .tabs__tab-content:not(.active) {
  position: absolute;
  left: -624.9375rem;
  opacity: 0;
  visibility: hidden;
}
.block-editor-block-list__layout .tabs__tab-content .row {
  justify-content: space-between;
}
.block-editor-block-list__layout .tabs__text-col {
  margin-bottom: 2rem;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .tabs__text-col {
    padding-top: 4.25rem;
    margin-bottom: 0;
  }
}
.block-editor-block-list__layout .tabs__location-pre-heading {
  display: inline-flex;
  align-items: center;
  padding: 0.3125rem 0.9375rem 0.5rem 0.5625rem;
  margin-bottom: 0.4375rem;
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.5rem;
  border-radius: 1rem;
  background-color: #153e0e;
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .tabs__location-pre-heading {
    padding: 0.1875rem 0.875rem 0.1875rem 0.6875rem;
  }
}
.block-editor-block-list__layout .tabs__location-pre-heading::before {
  content: "\ea1d";
  font-family: "iconfont-cheleyCamps";
  font-size: 24px;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin-right: 0.875rem;
  font-size: 1.25rem;
}
.block-editor-block-list__layout .tabs__heading {
  margin-top: clamp(0.25rem, -0.2692307692rem + 1.4423076923vw, 0.8125rem);
  margin-bottom: clamp(1.25rem, 0.3269230769rem + 2.5641025641vw, 2.25rem);
}
.block-editor-block-list__layout .tabs__description p {
  font-size: clamp(0.875rem, 0.6442307692rem + 0.641025641vw, 1.125rem);
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .tabs__image {
    margin-left: -0.9375rem;
  }
}
.block-editor-block-list__layout .tab-head-wrap {
  position: relative;
}
@media (max-width: 47.98rem) {
  .block-editor-block-list__layout .tab-head-wrap .tab-head:before, .block-editor-block-list__layout .tab-head-wrap .tab-head:after {
    content: "";
    display: table;
  }
  .block-editor-block-list__layout .tab-head-wrap .tab-head:after {
    clear: both;
  }
  .block-editor-block-list__layout .tab-head-wrap.has-scroll {
    margin-right: -1.25rem;
  }
}
@media (min-width: 48rem) {
  .block-editor-block-list__layout .block-accordion + .block-tabs {
    margin-top: 7.8125rem;
  }
}
.block-editor-block-list__layout .block-tabs:before {
  z-index: 1;
}
.block-editor-block-list__layout .block-tabs .tabs__tab-content .container .row .col-12 {
  flex: 0 0 100% !important;
  max-width: 100% !important;
}
.block-editor-block-list__layout .block-tabs .tabs__bg {
  z-index: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
