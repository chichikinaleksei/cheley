/****************
 * Fonts
 ****************/
/****************
 * Paints
 ****************/
/****************
 * Effects
 ****************/
/****************
 * Grid Settings
 ****************/
.block-editor-block-list__layout {
  /****************
   * Fonts
   ****************/
  /****************
   * Paints
   ****************/
  /****************
   * Effects
   ****************/
  /****************
   * Grid Settings
   ****************/
  /* stylelint-disable-line no-invalid-position-at-import-rule */
}
.block-editor-block-list__layout .block-library {
  background-color: #fff;
  border-bottom: 1px solid #e1e1e1;
  border-top: 1px solid #e1e1e1;
  margin-bottom: 4rem;
  max-height: 20vh;
  overflow: auto;
  position: sticky;
  top: 0;
  z-index: 99;
}
body.admin-bar .block-editor-block-list__layout .block-library {
  top: 32px;
}
@media screen and (max-width: 782px) {
  body.admin-bar .block-editor-block-list__layout .block-library {
    top: 46px;
  }
}
.block-editor-block-list__layout .block-library__hero {
  padding: 5rem 0 2.5rem 0;
  text-align: center;
}
.block-editor-block-list__layout .block-library__nav {
  font-size: clamp(0.875rem, 0.7596153846rem + 0.3205128205vw, 1rem);
  line-height: clamp(1.5rem, 1.2692307692rem + 0.641025641vw, 1.75rem);
  display: flex;
  flex-direction: row;
  gap: 2rem;
  list-style: none;
  margin: 0;
  padding: 0.375rem 1.25rem 0;
}
.block-editor-block-list__layout .block-library__nav > li {
  flex: 1 1 auto;
}
.block-editor-block-list__layout .block-library__nav li {
  margin: 0;
}
.block-editor-block-list__layout .block-library__nav-heading-wrapper {
  font-size: 0.875rem;
  font-weight: 700;
  line-height: 1rem;
  letter-spacing: 0.0625rem;
  text-transform: uppercase;
  align-items: center;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-bottom: 0.5rem;
}
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h1,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h1,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h2,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h2,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h3,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h3,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h4,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h4,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h5,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h5,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + h6,
.block-editor-block-list__layout .block-library__nav-heading-wrapper + .h6 {
  margin-top: 0;
}
.block-editor-block-list__layout .block-library__nav-heading-wrapper.align-center {
  text-align: center;
}
.block-editor-block-list__layout .block-library__nav-heading-wrapper.align-right {
  text-align: right;
}
.block-editor-block-list__layout .block-library__nav-heading {
  margin-bottom: 0;
  margin-right: 0.75rem;
}
.block-editor-block-list__layout .block-library__toggle-button, .block-editor-block-list__layout .block-library__hover-labels-toggle-button {
  -webkit-appearance: none;
  background-color: transparent;
  border: none;
  display: block;
  font-weight: 400;
  padding: 0;
}
.block-editor-block-list__layout .block-library__hover-labels-toggle-button span:last-child {
  display: none;
}
.block-editor-block-list__layout .block-library__hover-labels-toggle-button.active span:first-child {
  display: none;
}
.block-editor-block-list__layout .block-library__hover-labels-toggle-button.active span:last-child {
  display: block;
}
.block-editor-block-list__layout .block-library__toggle-button {
  margin-right: 0.75rem;
}
.block-editor-block-list__layout .block-library__nav-submenu {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}
.block-editor-block-list__layout .block-library__nav-submenu li {
  margin: 0 0.375rem 0.375rem 0;
}
.block-editor-block-list__layout .block-library__nav-item {
  white-space: nowrap;
}
.block-editor-block-list__layout .block-library__label {
  font-size: 0.75rem;
  line-height: 1rem;
  border: 2px solid #377e96;
  border-radius: 100rem;
  color: #377e96;
  cursor: pointer;
  font-weight: 700;
  margin: 0;
  padding: 0.25rem 0.5rem;
  transition: all 0.2s linear;
}
.block-editor-block-list__layout .block-library__label:hover, .block-editor-block-list__layout .block-library__label:focus {
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
}
.block-editor-block-list__layout .block-library__input {
  display: none;
}
.block-editor-block-list__layout .block-library__input:checked ~ .block-library__label {
  background-color: #377e96;
  color: #fff;
}
.block-editor-block-list__layout .block-library:not(.hide-hover-labels) ~ .page-content > *[data-block-title]::before {
  font-size: clamp(0.875rem, 0.7596153846rem + 0.3205128205vw, 1rem);
  line-height: clamp(1.5rem, 1.2692307692rem + 0.641025641vw, 1.75rem);
  background-color: #f0f0f0;
  border: 1px solid #e0e0e0;
  color: #1e1e1e;
  content: attr(data-block-title);
  display: block;
  font-weight: 600;
  left: 0;
  opacity: 0;
  padding: 1.25rem 0.0625rem;
  pointer-events: none;
  position: absolute;
  text-orientation: sideways;
  top: 0;
  transform: scale(-1);
  transition: opacity 0.2s ease-in-out;
  white-space: nowrap;
  writing-mode: vertical-rl;
  z-index: 9999;
}
.block-editor-block-list__layout .block-library:not(.hide-hover-labels) ~ .page-content > *[data-block-title]:hover::before {
  opacity: 1;
  pointer-events: auto;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
