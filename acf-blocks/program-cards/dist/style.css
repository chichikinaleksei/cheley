/****************
 * Fonts
 ****************/
/****************
 * Paints
 ****************/
/****************
 * Effects
 ****************/
/****************
 * Grid Settings
 ****************/
.block-program-cards {
  position: relative;
}
@media (min-width: 62rem) {
  .block-program-cards {
    margin-top: 6.4375rem;
  }
}
.block-program-cards__logos-wrapper {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.block-program-cards__logos-wrapper::before {
  content: "";
  width: 5.875rem;
  height: 7.125rem;
  position: absolute;
  top: 50.5%;
  right: -0.9375rem;
  background-image: url("../../../images/program-cards/logo.png");
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0.2;
  z-index: 1;
}
@media (min-width: 62rem) {
  .block-program-cards__logos-wrapper::before {
    width: 10.75rem;
    height: 13rem;
    top: 48%;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__logos-wrapper::after {
    content: "";
    width: 6.8125rem;
    height: 13.0625rem;
    position: absolute;
    bottom: 0;
    right: 0;
    background-image: url("../../../images/program-cards/logo_01.png");
    background-repeat: no-repeat;
    background-size: contain;
    opacity: 0.7;
  }
}
.block-program-cards__side-heading-wrapper {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}
.block-program-cards__side-heading {
  display: none;
}
@media (min-width: 62rem) {
  .block-program-cards__side-heading {
    display: block;
    font-size: 3.75rem;
    line-height: 3rem;
    font-family: "baskerville-urw", serif;
    color: #377e96;
    text-transform: uppercase;
    margin-bottom: 0;
    position: sticky;
    top: calc(var(--header-height) + 3.5rem);
    left: -0.375rem;
    z-index: -1;
    margin-left: -0.375rem !important;
    writing-mode: vertical-rl;
  }
}
@media (min-width: 48rem) {
  .block-program-cards .container {
    padding: 0 0.9375rem;
  }
}
@media (min-width: 62rem) {
  .block-program-cards .container {
    padding: 0 3.75rem;
  }
}
.block-program-cards__row-wrapper {
  padding: 0;
  background-color: #f0f0f0;
}
@media (min-width: 62rem) {
  .block-program-cards__row-wrapper {
    padding: 4rem 0;
    position: relative;
  }
  .block-program-cards__row-wrapper:before {
    content: " ";
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 6.2%;
    background-color: #ffffff;
  }
  .block-program-cards__row-wrapper:nth-of-type(even):before {
    right: 0;
    left: unset;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__row-wrapper:not(:last-child) {
    margin-bottom: 7.1875rem;
  }
}
.block-program-cards__row-wrapper:nth-of-type(even) {
  background-color: #ffffff;
}
@media (min-width: 62rem) {
  .block-program-cards__row-wrapper:nth-of-type(even) {
    background-color: #f0f0f0;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__row-wrapper:nth-of-type(even) .block-program-cards__text-wrapper {
    padding-left: 3rem;
  }
}
.block-program-cards__row-wrapper:nth-of-type(odd) .block-program-cards__text-col,
.block-program-cards__row-wrapper:nth-of-type(odd) .block-program-cards__image-link-col {
  background-color: #f0f0f0;
}
@media (min-width: 62rem) {
  .block-program-cards__row-wrapper:nth-of-type(odd) .block-program-cards__text-col,
  .block-program-cards__row-wrapper:nth-of-type(odd) .block-program-cards__image-link-col {
    background-color: unset;
  }
}
.block-program-cards__text-col {
  padding-top: 3rem;
  padding-bottom: 0.5rem;
}
@media (min-width: 48rem) {
  .block-program-cards__text-col {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__text-col {
    padding: 0 0.9375rem;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__text-wrapper {
    padding-left: 1.125rem;
    padding-right: 1.125rem;
    margin-top: 1.125rem;
  }
}
.block-program-cards__location-pre-heading {
  display: inline-flex;
  align-items: center;
  padding: 0.3125rem 0.9375rem 0.3125rem 0.5rem;
  margin-bottom: 0.4375rem;
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.5rem;
  border-radius: 1rem;
  background-color: rgba(158, 197, 255, 0.3);
}
@media (min-width: 48rem) {
  .block-program-cards__location-pre-heading {
    padding: 0.1875rem 0.875rem 0.1875rem 0.6875rem;
  }
}
@media (min-width: 88.125rem) {
  .block-program-cards__location-pre-heading {
    padding: 0.1875rem 0.875rem 0.1875rem 0.5rem;
  }
}
.block-program-cards__location-pre-heading::before {
  content: "\ea1d";
  font-family: "iconfont-cheleyCamps";
  font-size: 24px;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin-right: 0.875rem;
  font-size: 1.25rem;
}
.block-program-cards__heading {
  margin-top: clamp(0.25rem, -0.2692307692rem + 1.4423076923vw, 0.8125rem);
  margin-bottom: clamp(1.25rem, 0.7307692308rem + 1.4423076923vw, 1.8125rem);
}
@media (min-width: 62rem) {
  .block-program-cards__description {
    max-width: 21.875rem;
  }
}
.block-program-cards__description p {
  font-size: clamp(0.875rem, 0.7596153846rem + 0.3205128205vw, 1rem);
  line-height: clamp(1.5rem, 1.2692307692rem + 0.641025641vw, 1.75rem);
  margin-bottom: 1rem;
}
.block-program-cards__image-link-col:last-child {
  padding-top: 1rem;
  padding-bottom: 2.9375rem;
}
@media (min-width: 48rem) {
  .block-program-cards__image-link-col:last-child {
    padding-top: 0;
    padding-right: 2.5rem;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__image-link-col:last-child {
    padding-bottom: 0;
    padding-right: 0.9375rem;
  }
}
@media (min-width: 48rem) {
  .block-program-cards__image-link-col:not(:last-child) {
    padding-left: 2.5rem;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__image-link-col:not(:last-child) {
    padding-left: 0.9375rem;
  }
}
@media (min-width: 62rem) {
  .block-program-cards__image-link-wrapper {
    width: 100%;
    height: 100%;
  }
}
.block-program-cards__image-link-wrapper:hover .block-program-cards__image-link-text {
  color: #b3b3b3;
}
.block-program-cards__image-link-wrapper:hover .block-program-cards__image-link-text i:before {
  color: #b3b3b3;
}
.block-program-cards__link-image {
  width: 100%;
  aspect-ratio: 35/16;
  position: relative;
  overflow: hidden;
}
@media (min-width: 62rem) {
  .block-program-cards__link-image {
    aspect-ratio: unset;
    height: 100%;
    max-height: 30rem;
  }
}
.block-program-cards__link-image:before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 6.875rem;
  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
}
.block-program-cards__link-image img {
  min-width: 100%;
  object-fit: cover;
}
@media (min-width: 62rem) {
  .block-program-cards__link-image img {
    height: 100%;
  }
}
.block-program-cards__image-link-text {
  position: absolute !important;
  left: 0.875rem;
  bottom: 1rem;
  transition: color 0.2s linear;
}
@media (min-width: 88.125rem) {
  .block-program-cards__image-link-text {
    left: 1.25rem;
  }
}
.block-program-cards__image-link-text:after {
  display: none;
}
.block-program-cards__image-link-text i {
  margin-left: 0.3125rem !important;
}
.block-program-cards__image-link-text i:before {
  transition: color 0.2s linear;
}
@media (min-width: 62rem) {
  .block-program-cards + .block-program-single-card {
    margin-top: 9.4375rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
